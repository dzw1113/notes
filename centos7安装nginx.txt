1、下载nginx
http://nginx.org/download/nginx-1.12.0.tar.gz

mv nginx-1.12.0.tar.gz /mnt/

cd /mnt

tar -xvzf nginx-1.12.0.tar.gz

cd nginx-1.12.0


yum install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel

./configure 
或者配置nginx目录
./configure  --prefix=/usr/local/nginx    

日志如下：
Configuration summary
  + using system PCRE library
  + OpenSSL library is not used
  + using system zlib library

  nginx path prefix: "/usr/local/nginx"
  nginx binary file: "/usr/local/nginx/sbin/nginx"
  nginx modules path: "/usr/local/nginx/modules"
  nginx configuration prefix: "/usr/local/nginx/conf"
  nginx configuration file: "/usr/local/nginx/conf/nginx.conf"
  nginx pid file: "/usr/local/nginx/logs/nginx.pid"
  nginx error log file: "/usr/local/nginx/logs/error.log"
  nginx http access log file: "/usr/local/nginx/logs/access.log"
  nginx http client request body temporary files: "client_body_temp"
  nginx http proxy temporary files: "proxy_temp"
  nginx http fastcgi temporary files: "fastcgi_temp"
  nginx http uwsgi temporary files: "uwsgi_temp"
  nginx http scgi temporary files: "scgi_temp"




编译并安装
make
make install

编写nginx启动、停止、重启脚本
vim /etc/inid.d/nginx

chmod 755 /etc/init.d/nginx

nginx="/usr/sbin/nginx"  修改成nginx执行程序的路径。
修改成  nginx ="/usr/local/nginx/sbin/nginx"
NGINX_CONF_FILE="/etc/nginx/nginx.conf"  修改成配置文件的路径。
修改成  NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"


把nginx加入系统启动服务
chkconfig --add /etc/init.d/nginx
查看nginx是否是启动项
chkconfig --list nginx
设置为启动项
chkconfig nginx on
查看nginx是否是启动项
chkconfig --list nginx

/etc/init.d/nginx文件变动需要重启服务
systemctl daemon-reload


systemctl stop nginx.service
systemctl start nginx.service
systemctl status nginx.service

vim /etc/profile
export NGINX_HOME=/usr/local/nginx
export PATH=${NGINX_HOME}/sbin:${PATH}
source /etc/profile

nginx -V或者nginx -v
对比yum install nginx安装的
--prefix=/usr/share/nginx 
--sbin-path=/usr/sbin/nginx 
--modules-path=/usr/lib64/nginx/modules 
--conf-path=/etc/nginx/nginx.conf 
--error-log-path=/var/log/nginx/error.log 
--http-log-path=/var/log/nginx/access.log 
--http-client-body-temp-path=/var/lib/nginx/tmp/client_body 
--http-proxy-temp-path=/var/lib/nginx/tmp/proxy 
--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi 
--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi 
--http-scgi-temp-path=/var/lib/nginx/tmp/scgi 
--pid-path=/run/nginx.pid 
--lock-path=/run/lock/subsys/nginx 
--user=nginx 
--group=nginx 
--with-file-aio 
--with-ipv6 
--with-http_ssl_module 
--with-http_v2_module 
--with-http_realip_module 
--with-http_addition_module 
--with-http_xslt_module=dynamic 
--with-http_image_filter_module=dynamic 
--with-http_geoip_module=dynamic 
--with-http_sub_module 
--with-http_dav_module 
--with-http_flv_module 
--with-http_mp4_module 
--with-http_gunzip_module 
--with-http_gzip_static_module 
--with-http_random_index_module 
--with-http_secure_link_module 
--with-http_degradation_module 
--with-http_slice_module 
--with-http_stub_status_module 
--with-http_perl_module=dynamic 
--with-mail=dynamic 
--with-mail_ssl_module 
--with-pcre 
--with-pcre-jit 
--with-stream=dynamic 
--with-stream_ssl_module 
--with-google_perftools_module 
--with-debug 
--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic' 
--with-ld-opt='-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E'


动态添加nginx模块
./configure --add-module=/mnt/nginx-module/ngx_http_image_filter_module
make
./configure --prefix=/usr/local/nginx_image_filter/ --with-http_image_filter_module





nginx-RTMP直播模块
https://www.nginx.com/resources/wiki/start/topics/examples/redhatnginxinit/

第三方模块
https://www.nginx.com/resources/wiki/modules/index.html
http://www.oschina.net/project/tag/345/nginx-modules

nginx ./configure 参数
http://www.jb51.net/article/49049.htm


./configure 
--with-debug                            \  
--with-http_stub_status_module          \  
--with-http_ssl_module                  \  
--with-http_realip_module               \  
--with-http_image_filter_module         \  
--with-pcre=../pcre-8.21                \  
--add-module=../ngx_devel_kit-0.2.19    \  
--add-module=../lua-nginx-module-0.9.8  \  
--add-module=../echo-nginx-module       \  
--add-module=../redis2-nginx-module     \  
--add-module=../set-misc-nginx-module





----------------------------rpm安装----------------------------
rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm

yum info nginx

yum install nginx

nginx -V



./configure  --prefix=/usr/local/nginx --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module=dynamic --with-http_image_filter_module=dynamic --with-http_geoip_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-http_perl_module=dynamic --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-debug






./configure: error: the HTTP XSLT module requires the libxml2/libxslt
yum install libxml2 libxml2-devel libxslt-devel

./configure: error: the HTTP image filter module requires the GD library.
yum install gd-devel

./configure: error: perl module ExtUtils::Embed is required
yum -y install perl-devel perl-ExtUtils-Embed

./configure: error: the GeoIP module requires the GeoIP library.
yum -y install GeoIP GeoIP-devel GeoIP-data

./configure: error: the Google perftools module requires the Google perftool
不建议安装


firewall-cmd --permanent --add-port=80/tcp

firewall-cmd --reload


firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --permanent --zone=public --add-service=https